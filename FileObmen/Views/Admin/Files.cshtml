@using FileObmen.Tools
@using PagedList.Mvc;
@model PagedList.IPagedList<FileObmen.Models.Entities.File>

@{
    ViewBag.Title = "Files";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<table class="table table-bordered table-striped table-condensed">
    <thead>
        <tr>
            <th>Имя</th>
            <th>Размер</th>
            <th>Загружен</th>
            <th>Истекает</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var file in Model)
        {
            <tr class="@file.Sha">
                <td>@Html.PageLinks(file, x => Url.Action("Details", "File", new { sha = x }))</td>
                <td>@Html.FileSize(file.Size)</td>
                <td>@file.CreationTime.ToShortDateString()</td>
                <td>@file.DeleteTime.ToShortDateString()</td>
                <td>
                    @Html.ActionLink(" ", "GetFile", "File", new { sha = file.Sha }, new { @class = "btn btn-success btn-edit" })
                    @Html.ActionLink(" ", "EditFile", "File", new { sha = file.Sha }, new { @class = "btn btn-info btn-download compItem" })
                    <button class="btn btn-danger" name="del-btn" id="@file.Sha">
                        <i class="fa fa-trash-o"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Files", new { page }))
